{js()}
var _last_tr_item = null;
var _last_tr_html = null;
var _edited_value = null;
var _source_var = null;
var _i18n_for_page = typeof _i18n_for_page != 'undefined' ? _i18n_for_page : { };
var _i18n_not_translated = typeof _i18n_not_translated != 'undefined' ? _i18n_not_translated : { };
{/js}

{jquery()}

	// Fix "input" fields
	function remove_locale_tr_span(text) {
		return text.replace(/<span class=['"]?locale_tr['"]?[^>]*>|<\/span>/ig, '');
	}
	$("input[value*='locale_tr']").not("[type=text]").each(function(){
		var _old_val = $(this).val();
		$(this).val( remove_locale_tr_span(_old_val) ).after( _old_val );
	});
	$("input[placeholder]").each(function(){
		var _old_placeholder = $(this).attr('placeholder').replace(/&lt;/ig, '<').replace(/&gt;/ig, '>');
		$(this).attr('placeholder', remove_locale_tr_span( _old_placeholder )).after( _old_placeholder )
	});
	$("button").each(function(){
		var _old_html = $(this).html().replace(/&lt;/ig, '<').replace(/&gt;/ig, '>');
		$(this).html( remove_locale_tr_span(_old_html) ).after( _old_html );

		var _old_val = $(this).val();
		$(this).val( remove_locale_tr_span(_old_val) );
	});

	// Highlight not translated vars
	if (_i18n_not_translated) {
		$("span.locale_tr").each(function(){
			if (_i18n_not_translated[($(this).html()).toLowerCase()]) {
				$(this).addClass("locale_not_tr");
			}
		});
	}

	// Save edited var on double click
	$(document).on("dblclick", function(e){
		_my_save_var();
		return false;
	});

	// Display edit var dialog on "context menu" mouse click over editable var
	$(document).on("contextmenu", "span.locale_tr", function(e) {
		// Special case for the hyperlinks
		$(this).closest('a').on("click", function(){ return false; });

		$(this).attr("s_var", $(this).attr("s_var").replace("%20", " "));

		_my_save_var();

		// Save last edited element
		_last_tr_item = $(this);
		_last_tr_html = $(this).html();
		$(this).html(
			"<input type='text' value='" + $(this).text().replace(/\'/, '&#39;') + "' class='editable_tr' s_var='" + $(this).attr("s_var").replace(/\'/, '&#39;') + "' />" 
			+ " <span class='var_old_value'>" + $(this).attr("s_var") + "</span>"
		);

		// Set current field focused and selected
		$(this).find("input.editable_tr").focus().select();

		return false;
	});

	// Catch keyboard keys Enter and Esc
	$(document).on("keyup", function(e){
		var _key_code = e.keyCode;
		if (_key_code != 13 && _key_code != 27) {
			return true;
		}
//		e.stopPropagation(); e.preventDefault();
		// "Enter"
		if (_key_code == 13) {
			_my_save_var();
		}
		// "Esc" -> cancel editing
		if (_key_code == 27) {
			if (_last_tr_item != null) {
				_last_tr_item.html(_last_tr_html);
				_last_tr_item.parent().off("click");
				_last_tr_item = null;
			}
			// Hide stpl edit div
			if (_old_text != "" && _old_text != $("#inline_edit_text").val()) {
				if (!confirm("Text has changed, are you sure you wan't to quit editing?")) {
					return false;
				}
			}
			$("#inline_edit_stpl").css({"display" : "none"});
			_old_text = "";
		}
		return false;

	});

	// Revert last state of the previous element
	function _my_save_var () {
		if (_last_tr_item == null) {
//			console.log('_last_tr_item:', _last_tr_item)
//			console.log('_i18n_for_page:', _i18n_for_page)
			return false;
		}
		var _edited_value = _last_tr_item.find("input.editable_tr").val();
		var _source_var = "";
		if (_last_tr_html != "") {
			_source_var = _last_tr_item.find("input.editable_tr").attr("s_var");
		}
		if (_edited_value != "" && _source_var != "" && $.trim(_last_tr_html) != $.trim(_edited_value)
			&& confirm("Are you sure you wan't to save your changes?")
		) {
			$.post(_form_action, { "source_var": _source_var, "edited_value":_edited_value }, function(data) {
				// Translate all same elements on page
				$("span.locale_tr").each(function(i){
					if (_last_tr_html != "" && $(this).html() == _last_tr_html) {
						$(this).html(_edited_value);
					}
				});
				alert("NEW:\n\n" + _edited_value + "\n\nOLD:\n\n" + _last_tr_html + "\n\nSERVER SAID:\n\n" + data);
				_last_tr_html = "";
				// Allow further edit this var without page refresh
				_i18n_for_page[_edited_value] = _source_var;
			});
			_last_tr_item.html(_edited_value);
		} else {
			if (_last_tr_html != "") {
				_last_tr_item.html(_last_tr_html);
			}
		}
		_last_tr_item.parent().off("click");
		_last_tr_item = null;
	}

	_inline_editor_loaded = true;

{/jquery}

{js()}
// Do not touch! Needed to prevent double init of the inline editor
var _inline_editor_loaded = false;

// Catch ajax tooltip
function _debug_catch(obj) {
	$("span.locale_tr", $(obj)).on("click", _locale_tr_click_handle);
}
{/js}