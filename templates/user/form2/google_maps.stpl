{css()}
	#map_canvas {height:350px;width:500px}
{/css}

{js()}
	var map;
	var markersArray = [ ];
	var descriptionsArray = [ ];
	var marker_index = 0;
	var markers_limit = {markers_limit};

	function initMap(container_id) {
		markers_limit--;
		var latlng = new google.maps.LatLng({start_lat}, {start_lng});
		var myOptions = {
			zoom: {start_zoom},
			minZoom: 1,
			maxZoom: 17,
			center: latlng,
			disableDefaultUI: false,
			mapTypeId: google.maps.MapTypeId.ROADMAP,
			mapTypeControlOptions: {
				style: google.maps.MapTypeControlStyle.DROPDOWN_MENU,
				position: google.maps.ControlPosition.TOP_CENTER
			}
		};
		map = new google.maps.Map($('#'+container_id)[0], myOptions);
		markers_cnt = loadMarkers();
		google.maps.event.addListener(map, "click", function(event) {
			placeMarker(event.latLng,"");
		});
		$($('#'+container_id)).on('click','.marker_delete',function() {
			var index= $(this).attr('data_marker_id');
			deleteMarker(index);
			saveMarkers();
			updateMarkersCnt();
			return false;
		});

		$($('#'+container_id)).on('change','.marker_description',function() {
			descriptionsArray[$(this).attr('data_id')] = $(this).val();
//			markersArray[$(this).attr('data_id')].setTitle($(this).val());
			saveMarkers();
			return false;
		});

		zoomtoAllMarkers();

		$($('.all_marker_delete')).on('click',function() {
			marker_index = 0;
			while (marker_index <= markers_limit) {
				if (markersArray[marker_index]) {
					deleteMarker(marker_index);
				}
				marker_index++;
			}
			saveMarkers();
			return false;
		});

		$($('.all_marker_show')).on('click',function() {
			zoomtoAllMarkers();
			return false;
		});
	}

	function zoomtoAllMarkers() {
		var bounds = new google.maps.LatLngBounds();
		var num_markers = 0;
		marker_index = 0;
		while (marker_index <= markers_limit) {
			if (markersArray[marker_index]) {
				bounds.extend(markersArray[marker_index].getPosition());
				num_markers++;
			}
			marker_index++;
		}
		if (num_markers > 0) map.fitBounds(bounds);
	}

	function isinfowindowOpen(infowindow){
		var map = infowindow.getMap();
		return (map !== null && typeof map !== "undefined");
	}

	function placeMarker(location,description) {
		marker_index = 0;
		while (markersArray[marker_index]) marker_index++;
		if (marker_index > markers_limit) {
			// todo:limit msg
			alert("{t('markers limit reached')}");
		} else {
			var marker = new google.maps.Marker({
				position: location,
				draggable:true,
				clickable: true,
//				title: description,
				map: map
			});
			markersArray[marker_index] = marker;
			descriptionsArray[marker_index] = description;
			var infowindow = new google.maps.InfoWindow({
				content: '<input type="text" data_id="'+marker_index+'" class="marker_description form-control" placeholder="{t(description)}" value="'+description+'"><br />' +
						'<p align="right"><a data_marker_id="'+marker_index+'" class="btn btn-default btn-mini btn-xs marker_delete">{t('delete marker')}</a></p>',
			});
			google.maps.event.addListener(marker, 'click', function() {
				if (isinfowindowOpen(infowindow)){
					infowindow.close(map,marker);
				} else {
					infowindow.open(map,marker);
						$(".marker_description").each(function() {
						$(this).val(descriptionsArray[$(this).attr('data_id')]);
					});
				}
			});
			google.maps.event.addListener(marker, 'dragend', function() {
				saveMarkers();
			});
			saveMarkers();
			updateMarkersCnt();
		}
	}

	function saveMarkers() {
		var out_array = { };
		marker_index = 0;
		while (marker_index <= markers_limit) {
			if (markersArray[marker_index]) {
				out_array[marker_index] = { };
				out_array[marker_index]['lat'] = markersArray[marker_index].getPosition().lat();
				out_array[marker_index]['lng'] = markersArray[marker_index].getPosition().lng();
				out_array[marker_index]['dsc'] = descriptionsArray[marker_index];
			}
			marker_index++;
		}
		var json = JSON.stringify(out_array);
		$('#markers_data').val(json);
	}

	function loadMarkers() {
		try {
			result = JSON.parse($('#markers_data').val());
		} catch (e) {
			return false;
		}
		marker_index_load = 0;
		while (marker_index_load <= markers_limit) {
			if (result[marker_index_load]) placeMarker(new google.maps.LatLng(result[marker_index_load]['lat'], result[marker_index_load]['lng']),result[marker_index_load]['dsc']);
			marker_index_load++;
		}
	}

	function updateMarkersCnt() {
		var markers_cnt = 0;
		var marker_index_cnt = 0;
		while (marker_index_cnt <= markers_limit) {
			if (markersArray[marker_index_cnt]) markers_cnt++;
			marker_index_cnt++;
		}
		$('#markers_cnt').html(markers_cnt);
	}

	function deleteMarker(index) {
		markersArray[index].setMap(null);
		markersArray[index] = false;
		updateMarkersCnt();
	}

{/js}

{jquery()}
	initMap('map_canvas');
{/jquery}

<div id="map_canvas"></div>
<input type="hidden" name='{name}' id="markers_data" value='{value}'>
<b>{t('Markers set')}: <span id="markers_cnt">0</span>/{markers_limit}</b>
<a class="btn btn-default btn-mini btn-xs all_marker_show"> {t('zoom to show all markers')} </a>
<a class="btn btn-default btn-mini btn-xs all_marker_delete"> {t('delete all markers')} </a>

